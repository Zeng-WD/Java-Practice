CGLIB 代理是针对类来实现代理的，原理是对指定的委托类生成一个子类并重写其中业务方法来实现代理。代理类对象是由 Enhancer 类创建的。CGLIB 创建动态代理类的模式是:

1.查找目标类上的所有非 final 的 public 类型的方法 (final 的不能被重写)
2.将这些方法的定义转成字节码
3.将组成的字节码转换成相应的代理的 Class 对象然后通过反射获得代理类的实例对象
4.实现 MethodInterceptor 接口, 用来处理对代理类上所有方法的请求

对于需要被代理的类，它只是动态生成一个子类以覆盖非 final 的方法，同时绑定钩子回调自定义的拦截器。
它比 JDK 动态代理还要快。传入目标类作为代理的父类。不同于 JDK 动态代理，不能使用目标对象来创建代理。目标对象只能被 CGLIB 创建。在例子中，默认的无参构造方法被使用来创建目标对象。